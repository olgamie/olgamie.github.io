<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Deep Learning on Tech blog by Olga Mierzwa-Sulima</title>
    <link>/tags/deep-learning/</link>
    <description>Recent content in Deep Learning on Tech blog by Olga Mierzwa-Sulima</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 05 Oct 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/deep-learning/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Classifying animals on camera traps using deep learning - iWildCam 2020 Kaggle top 10% solution</title>
      <link>/2020/10/05/classifying-animals-on-camera-traps-using-deep-learning-iwildcam-2020-kaggle-top-10-solution/</link>
      <pubDate>Mon, 05 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/10/05/classifying-animals-on-camera-traps-using-deep-learning-iwildcam-2020-kaggle-top-10-solution/</guid>
      <description>TL;DRI used data from iWildCam 2020 Kaggle competition to practice machine learning vision after completing fast.aiâ€™s deep learning course.I managed to build a solution that achieved 78% accuracy on the test set in classifying animals on the camera trap photo, which places the solution in the top 10% of this competition (10/126).I built two models: the first model is a ResNet50 on the original images but resized, with moderate data augmentation, mixup and TTA, the second model is also ResNet50 built on the cropped images to bboxes detecting the animals.</description>
    </item>
    
  </channel>
</rss>